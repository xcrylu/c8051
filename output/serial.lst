C51 COMPILER V9.01   SERIAL                                                                11/25/2022 22:50:27 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN .\output\serial.obj
COMPILER INVOKED BY: C:\Keil_v5-79\C51\BIN\C51.EXE driver\serial.c COMPACT BROWSE INCDIR(.\driver) DEBUG OBJECTEXTEND CO
                    -DE SYMBOLS PRINT(.\output\serial.lst) PREPRINT(.\output\serial.i) OBJECT(.\output\serial.obj)

line level    source

   1          //serial.c
   2          
   3          #include "serial.h"
   4          
   5          void serialInit(void)
   6          {          
   7   1              SCON = 0x50;     //串口工作方式1，8位异步，波特可变，允许接收   
   8   1              TMOD = (0x20|(TMOD&0x0F)) ;//定时器1工作方式2:8位自动重载
   9   1              PCON = 0x00;
  10   1              TH1=TL1 = 0xFD ;//波特率为9600 fosc = 12M时，误差8.5%   ,fosc=11.0592M,无误差 
  11   1              TR1 = 1; //启动定时器 
  12   1      }
  13          
  14          void serialSendByte(char c)
  15          {
  16   1              SBUF = c;
  17   1              while(TI==0);
  18   1              TI = 0;
  19   1      } 
  20          
  21          void serialSendString(char* str)
  22          {
  23   1              while(*str)
  24   1                 serialSendByte(*str++);
  25   1      }  
  26          
  27          //本函数有bug，如果一直未收到数据，
  28          //程序将在此卡死
  29          //串口接收最好使用中断方式实现 
  30          char  serialReceive(void)
  31          {
  32   1              while(RI==0);
  33   1              RI = 0;
  34   1              return SBUF; 
  35   1      }
C51 COMPILER V9.01   SERIAL                                                                11/25/2022 22:50:27 PAGE 2   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION serialInit (BEGIN)
                                           ; SOURCE LINE # 5
                                           ; SOURCE LINE # 6
                                           ; SOURCE LINE # 7
0000 759850            MOV     SCON,#050H
                                           ; SOURCE LINE # 8
0003 E589              MOV     A,TMOD
0005 540F              ANL     A,#0FH
0007 4420              ORL     A,#020H
0009 F589              MOV     TMOD,A
                                           ; SOURCE LINE # 9
000B E4                CLR     A
000C F587              MOV     PCON,A
                                           ; SOURCE LINE # 10
000E 758BFD            MOV     TL1,#0FDH
0011 758DFD            MOV     TH1,#0FDH
                                           ; SOURCE LINE # 11
0014 D28E              SETB    TR1
                                           ; SOURCE LINE # 12
0016 22                RET     
             ; FUNCTION serialInit (END)

             ; FUNCTION _serialSendByte (BEGIN)
                                           ; SOURCE LINE # 14
;---- Variable 'c' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 16
0000 8F99              MOV     SBUF,R7
0002         ?C0002:
                                           ; SOURCE LINE # 17
0002 3099FD            JNB     TI,?C0002
0005         ?C0003:
                                           ; SOURCE LINE # 18
0005 C299              CLR     TI
                                           ; SOURCE LINE # 19
0007 22                RET     
             ; FUNCTION _serialSendByte (END)

             ; FUNCTION _serialSendString (BEGIN)
                                           ; SOURCE LINE # 21
0000 7800        R     MOV     R0,#LOW str
0002 EB                MOV     A,R3
0003 F2                MOVX    @R0,A
0004 08                INC     R0
0005 EA                MOV     A,R2
0006 F2                MOVX    @R0,A
0007 08                INC     R0
0008 E9                MOV     A,R1
0009 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 22
000A         ?C0005:
                                           ; SOURCE LINE # 23
000A 7800        R     MOV     R0,#LOW str
000C E2                MOVX    A,@R0
000D FB                MOV     R3,A
000E 08                INC     R0
000F E2                MOVX    A,@R0
0010 FA                MOV     R2,A
0011 08                INC     R0
C51 COMPILER V9.01   SERIAL                                                                11/25/2022 22:50:27 PAGE 3   

0012 E2                MOVX    A,@R0
0013 F9                MOV     R1,A
0014 120000      E     LCALL   ?C?CLDPTR
0017 601A              JZ      ?C0007
                                           ; SOURCE LINE # 24
0019 7800        R     MOV     R0,#LOW str
001B E2                MOVX    A,@R0
001C FB                MOV     R3,A
001D 08                INC     R0
001E 08                INC     R0
001F E2                MOVX    A,@R0
0020 F9                MOV     R1,A
0021 2401              ADD     A,#01H
0023 F2                MOVX    @R0,A
0024 18                DEC     R0
0025 E2                MOVX    A,@R0
0026 FA                MOV     R2,A
0027 3400              ADDC    A,#00H
0029 F2                MOVX    @R0,A
002A 120000      E     LCALL   ?C?CLDPTR
002D FF                MOV     R7,A
002E 120000      R     LCALL   _serialSendByte
0031 80D7              SJMP    ?C0005
                                           ; SOURCE LINE # 25
0033         ?C0007:
0033 22                RET     
             ; FUNCTION _serialSendString (END)

             ; FUNCTION serialReceive (BEGIN)
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0000         ?C0008:
                                           ; SOURCE LINE # 32
0000 3098FD            JNB     RI,?C0008
0003         ?C0009:
                                           ; SOURCE LINE # 33
0003 C298              CLR     RI
                                           ; SOURCE LINE # 34
0005 AF99              MOV     R7,SBUF
                                           ; SOURCE LINE # 35
0007         ?C0010:
0007 22                RET     
             ; FUNCTION serialReceive (END)

C51 COMPILER V9.01   SERIAL                                                                11/25/2022 22:50:27 PAGE 4   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
_serialSendString. . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  str. . . . . . . . . . . . . . . . .  AUTO     PDATA  PTR      0000H  3
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
serialInit . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
_serialSendByte. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  c. . . . . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0007H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
serialReceive. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     91    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----       3
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
