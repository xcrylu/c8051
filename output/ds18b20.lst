C51 COMPILER V9.01   DS18B20                                                               11/25/2022 22:50:27 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\output\ds18b20.obj
COMPILER INVOKED BY: C:\Keil_v5-79\C51\BIN\C51.EXE driver\ds18b20.c COMPACT BROWSE INCDIR(.\driver) DEBUG OBJECTEXTEND C
                    -ODE SYMBOLS PRINT(.\output\ds18b20.lst) PREPRINT(.\output\ds18b20.i) OBJECT(.\output\ds18b20.obj)

line level    source

   1          
   2          //DS18b20.h
   3          
   4          #include "DS18B20.h"
   5          
   6          
   7          //uchar  devId[3][8]={
   8          //              {0},
   9          //              {0},
  10          //              {0}
  11          //      };
  12          
  13          //1-wire复位
  14          void wire1Reset(void)
  15          {
  16   1              DQ = 0;
  17   1              delayus(480);
  18   1              DQ = 1;
  19   1      }
  20          //1-wire初始化
  21          // 返回值： 1 初始化成功
  22          //          0 无设备应答
  23          uchar wire1Init(void)
  24          {
  25   1              uchar ret = 0;
  26   1              wire1Reset();
  27   1              delayus(20);
  28   1              if(DQ == 0 ) ret = 1;
  29   1              else  ret = 0;
  30   1              delayus(460);
  31   1              return ret;
  32   1      }
  33          // 1-wire写位
  34          void wire1WriteBit(bit b)
  35          {
  36   1              DQ = 0;
  37   1              if(b==0){  //写0
  38   2                      delayus(60);
  39   2                      DQ = 1;
  40   2              }else{     //写1;
  41   2                      delayus(10);
  42   2                      DQ = 1;
  43   2                      delayus(50);
  44   2              }
  45   1      }
  46          //1-wire 读bit
  47          //返回值： 0
  48          //         1
  49          uchar wire1ReadBit(void)
  50          {
  51   1              uchar ret = 0;
  52   1              DQ = 0;//发起读时隙
  53   1              delayus(2);
  54   1              DQ = 1; //释放总线
C51 COMPILER V9.01   DS18B20                                                               11/25/2022 22:50:27 PAGE 2   

  55   1              delayus(5);
  56   1              if( DQ == 0) ret  = 0;
  57   1              else  ret = 1;
  58   1              delayus(53);
  59   1              return ret;
  60   1      }
  61          
  62          void wire1Byte(uchar value)
  63          {
  64   1              bit b ;
  65   1              uchar i=0;
  66   1              for(i = 0;i <8;i++)
  67   1              {
  68   2                      b = (value&0x01);
  69   2                      wire1WriteBit(b);
  70   2                      value >>= 1;
  71   2              } 
  72   1      }
  73          
  74          uchar wire1ReadByte(void)
  75          {
  76   1              uchar ret=0;
  77   1              uchar i = 0;
  78   1              for(i = 0;i     <8 ;i++){
  79   2                      ret &=  (wire1ReadBit()<<i); 
  80   2              }
  81   1              return ret;                        
  82   1      }
  83          
  84          void ds18b20Config(uchar mode)
  85          {
  86   1              wire1Init();
  87   1              wire1WriteByte(DS1B20Cmd_SKIP_ROM);
  88   1              wire1WriteByte(DS1B20Cmd_WRITE_SCHPAD);
  89   1              wire1WriteByte(0x00);
  90   1              wire1WriteByte(0xFF);
  91   1              wire1WriteByte(mode);
  92   1      }
  93          
  94          //unsigned short ds18B20ReadTemperture(uchar devId[8])
  95          unsigned short ds18B20ReadTemperture(void)
  96          {
  97   1              uint ret = 0;
  98   1              uchar tmp1,tmp2;
  99   1      //      uchar i;
 100   1              
 101   1              wire1Init();
 102   1              wire1WriteByte(DS1B20Cmd_SKIP_ROM);
 103   1              wire1WriteByte(DS1B20Cmd_CONVERT);
 104   1              delayms(800);     //等待完成测量（转换）
 105   1      
 106   1              //输入读暂存命令DS1B20Cmd_READ_SCHPAD 
 107   1              //后ds18b20会连续输出全暂存9位数据
 108   1              //通过发送复位命令后终止数据传输
 109   1              wire1Init();
 110   1      //      wireWriteByte(DS1B20Cmd_SKIP_ROM);
 111   1              //指定设备ID
 112   1      //      for(i=0;i<8;i++) {
 113   1      //         wire1WriteByte(devId[i]);
 114   1      //      }
 115   1              // 如果只有一个设备在线，使用跳过rom命令，不用指定设备id        
 116   1              wire1WriteByte(DS1B20Cmd_SKIP_ROM);
C51 COMPILER V9.01   DS18B20                                                               11/25/2022 22:50:27 PAGE 3   

 117   1              wire1WriteByte(DS1B20Cmd_READ_SCHPAD);    //读暂存器
 118   1              tmp1 = wire1ReadByte();
 119   1              tmp2 = wire1ReadByte();
 120   1              wire1Reset();
 121   1              ret = tmp1+tmp2*255;
 122   1              return ret;
 123   1      }
 124                          
 125                  
 126          
 127          
 128          
 129          
 130          
 131          
 132          
C51 COMPILER V9.01   DS18B20                                                               11/25/2022 22:50:27 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION wire1Reset (BEGIN)
                                           ; SOURCE LINE # 14
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 16
0000 C294              CLR     DQ
                                           ; SOURCE LINE # 17
0002 7FE0              MOV     R7,#0E0H
0004 7E01              MOV     R6,#01H
0006 120000      E     LCALL   _delayus
                                           ; SOURCE LINE # 18
0009 D294              SETB    DQ
                                           ; SOURCE LINE # 19
000B 22                RET     
             ; FUNCTION wire1Reset (END)

             ; FUNCTION wire1Init (BEGIN)
                                           ; SOURCE LINE # 23
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
0000 E4                CLR     A
0001 7800        R     MOV     R0,#LOW ret
0003 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 26
0004 120000      R     LCALL   wire1Reset
                                           ; SOURCE LINE # 27
0007 7F14              MOV     R7,#014H
0009 7E00              MOV     R6,#00H
000B 120000      E     LCALL   _delayus
                                           ; SOURCE LINE # 28
000E 209407            JB      DQ,?C0002
0011 7800        R     MOV     R0,#LOW ret
0013 7401              MOV     A,#01H
0015 F2                MOVX    @R0,A
0016 8004              SJMP    ?C0003
0018         ?C0002:
                                           ; SOURCE LINE # 29
0018 E4                CLR     A
0019 7800        R     MOV     R0,#LOW ret
001B F2                MOVX    @R0,A
001C         ?C0003:
                                           ; SOURCE LINE # 30
001C 7FCC              MOV     R7,#0CCH
001E 7E01              MOV     R6,#01H
0020 120000      E     LCALL   _delayus
                                           ; SOURCE LINE # 31
0023 7800        R     MOV     R0,#LOW ret
0025 E2                MOVX    A,@R0
0026 FF                MOV     R7,A
                                           ; SOURCE LINE # 32
0027         ?C0004:
0027 22                RET     
             ; FUNCTION wire1Init (END)

             ; FUNCTION wire1WriteBit (BEGIN)
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
0000 C294              CLR     DQ
                                           ; SOURCE LINE # 37
C51 COMPILER V9.01   DS18B20                                                               11/25/2022 22:50:27 PAGE 5   

0002 20000A      R     JB      b,?C0005
                                           ; SOURCE LINE # 38
0005 7F3C              MOV     R7,#03CH
0007 7E00              MOV     R6,#00H
0009 120000      E     LCALL   _delayus
                                           ; SOURCE LINE # 39
000C D294              SETB    DQ
                                           ; SOURCE LINE # 40
000E 22                RET     
000F         ?C0005:
                                           ; SOURCE LINE # 41
000F 7F0A              MOV     R7,#0AH
0011 7E00              MOV     R6,#00H
0013 120000      E     LCALL   _delayus
                                           ; SOURCE LINE # 42
0016 D294              SETB    DQ
                                           ; SOURCE LINE # 43
0018 7F32              MOV     R7,#032H
001A 7E00              MOV     R6,#00H
001C 120000      E     LCALL   _delayus
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
001F         ?C0007:
001F 22                RET     
             ; FUNCTION wire1WriteBit (END)

             ; FUNCTION wire1ReadBit (BEGIN)
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
0000 E4                CLR     A
0001 7800        R     MOV     R0,#LOW ret
0003 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 52
0004 C294              CLR     DQ
                                           ; SOURCE LINE # 53
0006 7F02              MOV     R7,#02H
0008 FE                MOV     R6,A
0009 120000      E     LCALL   _delayus
                                           ; SOURCE LINE # 54
000C D294              SETB    DQ
                                           ; SOURCE LINE # 55
000E 7F05              MOV     R7,#05H
0010 7E00              MOV     R6,#00H
0012 120000      E     LCALL   _delayus
                                           ; SOURCE LINE # 56
0015 209406            JB      DQ,?C0008
0018 E4                CLR     A
0019 7800        R     MOV     R0,#LOW ret
001B F2                MOVX    @R0,A
001C 8005              SJMP    ?C0009
001E         ?C0008:
                                           ; SOURCE LINE # 57
001E 7800        R     MOV     R0,#LOW ret
0020 7401              MOV     A,#01H
0022 F2                MOVX    @R0,A
0023         ?C0009:
                                           ; SOURCE LINE # 58
0023 7F35              MOV     R7,#035H
0025 7E00              MOV     R6,#00H
0027 120000      E     LCALL   _delayus
                                           ; SOURCE LINE # 59
C51 COMPILER V9.01   DS18B20                                                               11/25/2022 22:50:27 PAGE 6   

002A 7800        R     MOV     R0,#LOW ret
002C E2                MOVX    A,@R0
002D FF                MOV     R7,A
                                           ; SOURCE LINE # 60
002E         ?C0010:
002E 22                RET     
             ; FUNCTION wire1ReadBit (END)

             ; FUNCTION _wire1Byte (BEGIN)
                                           ; SOURCE LINE # 62
0000 7800        R     MOV     R0,#LOW value
0002 EF                MOV     A,R7
0003 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 65
0004 E4                CLR     A
0005 08                INC     R0
0006 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 66
0007 F2                MOVX    @R0,A
0008         ?C0011:
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
0008 7800        R     MOV     R0,#LOW value
000A E2                MOVX    A,@R0
000B 13                RRC     A
000C 9200        R     MOV     b,C
                                           ; SOURCE LINE # 69
000E A200        R     MOV     C,b
0010 9200        R     MOV     ?wire1WriteBit?BIT,C
0012 120000      R     LCALL   wire1WriteBit
                                           ; SOURCE LINE # 70
0015 7800        R     MOV     R0,#LOW value
0017 E2                MOVX    A,@R0
0018 C3                CLR     C
0019 13                RRC     A
001A F2                MOVX    @R0,A
                                           ; SOURCE LINE # 71
001B 08                INC     R0
001C E2                MOVX    A,@R0
001D 04                INC     A
001E F2                MOVX    @R0,A
001F E2                MOVX    A,@R0
0020 C3                CLR     C
0021 9408              SUBB    A,#08H
0023 40E3              JC      ?C0011
                                           ; SOURCE LINE # 72
0025         ?C0014:
0025 22                RET     
             ; FUNCTION _wire1Byte (END)

             ; FUNCTION wire1ReadByte (BEGIN)
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
0000 E4                CLR     A
0001 7800        R     MOV     R0,#LOW ret
0003 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 77
0004 08                INC     R0
0005 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 78
C51 COMPILER V9.01   DS18B20                                                               11/25/2022 22:50:27 PAGE 7   

0006 F2                MOVX    @R0,A
0007         ?C0015:
                                           ; SOURCE LINE # 79
0007 7800        R     MOV     R0,#LOW ret
0009 E2                MOVX    A,@R0
000A FF                MOV     R7,A
000B C007              PUSH    AR7
000D 120000      R     LCALL   wire1ReadBit
0010 7800        R     MOV     R0,#LOW i
0012 E2                MOVX    A,@R0
0013 FE                MOV     R6,A
0014 EF                MOV     A,R7
0015 A806              MOV     R0,AR6
0017 08                INC     R0
0018 8002              SJMP    ?C0022
001A         ?C0021:
001A C3                CLR     C
001B 33                RLC     A
001C         ?C0022:
001C D8FC              DJNZ    R0,?C0021
001E FE                MOV     R6,A
001F D0E0              POP     ACC
0021 5E                ANL     A,R6
0022 7800        R     MOV     R0,#LOW ret
0024 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 80
0025 08                INC     R0
0026 E2                MOVX    A,@R0
0027 04                INC     A
0028 F2                MOVX    @R0,A
0029 E2                MOVX    A,@R0
002A C3                CLR     C
002B 9408              SUBB    A,#08H
002D 40D8              JC      ?C0015
002F         ?C0016:
                                           ; SOURCE LINE # 81
002F 7800        R     MOV     R0,#LOW ret
0031 E2                MOVX    A,@R0
0032 FF                MOV     R7,A
                                           ; SOURCE LINE # 82
0033         ?C0018:
0033 22                RET     
             ; FUNCTION wire1ReadByte (END)

             ; FUNCTION _ds18b20Config (BEGIN)
                                           ; SOURCE LINE # 84
0000 7800        R     MOV     R0,#LOW mode
0002 EF                MOV     A,R7
0003 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
0004 120000      R     LCALL   wire1Init
                                           ; SOURCE LINE # 87
0007 7FCC              MOV     R7,#0CCH
0009 120000      E     LCALL   _wire1WriteByte
                                           ; SOURCE LINE # 88
000C 7F4E              MOV     R7,#04EH
000E 120000      E     LCALL   _wire1WriteByte
                                           ; SOURCE LINE # 89
0011 E4                CLR     A
0012 FF                MOV     R7,A
0013 120000      E     LCALL   _wire1WriteByte
C51 COMPILER V9.01   DS18B20                                                               11/25/2022 22:50:27 PAGE 8   

                                           ; SOURCE LINE # 90
0016 7FFF              MOV     R7,#0FFH
0018 120000      E     LCALL   _wire1WriteByte
                                           ; SOURCE LINE # 91
001B 7800        R     MOV     R0,#LOW mode
001D E2                MOVX    A,@R0
001E FF                MOV     R7,A
001F 020000      E     LJMP    _wire1WriteByte
             ; FUNCTION _ds18b20Config (END)

             ; FUNCTION ds18B20ReadTemperture (BEGIN)
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
;---- Variable 'ret' assigned to Register 'R6/R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
0002 FE                MOV     R6,A
                                           ; SOURCE LINE # 101
0003 120000      R     LCALL   wire1Init
                                           ; SOURCE LINE # 102
0006 7FCC              MOV     R7,#0CCH
0008 120000      E     LCALL   _wire1WriteByte
                                           ; SOURCE LINE # 103
000B 7F44              MOV     R7,#044H
000D 120000      E     LCALL   _wire1WriteByte
                                           ; SOURCE LINE # 104
0010 7F20              MOV     R7,#020H
0012 7E03              MOV     R6,#03H
0014 120000      E     LCALL   _delayms
                                           ; SOURCE LINE # 109
0017 120000      R     LCALL   wire1Init
                                           ; SOURCE LINE # 116
001A 7FCC              MOV     R7,#0CCH
001C 120000      E     LCALL   _wire1WriteByte
                                           ; SOURCE LINE # 117
001F 7FBE              MOV     R7,#0BEH
0021 120000      E     LCALL   _wire1WriteByte
                                           ; SOURCE LINE # 118
0024 120000      R     LCALL   wire1ReadByte
0027 7800        R     MOV     R0,#LOW tmp1
0029 EF                MOV     A,R7
002A F2                MOVX    @R0,A
                                           ; SOURCE LINE # 119
002B 120000      R     LCALL   wire1ReadByte
002E 7800        R     MOV     R0,#LOW tmp2
0030 EF                MOV     A,R7
0031 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 120
0032 120000      R     LCALL   wire1Reset
                                           ; SOURCE LINE # 121
0035 7800        R     MOV     R0,#LOW tmp2
0037 E2                MOVX    A,@R0
0038 75F0FF            MOV     B,#0FFH
003B A4                MUL     AB
003C FF                MOV     R7,A
003D 18                DEC     R0
003E E2                MOVX    A,@R0
003F 7C00              MOV     R4,#00H
0041 2F                ADD     A,R7
0042 FF                MOV     R7,A
0043 EC                MOV     A,R4
C51 COMPILER V9.01   DS18B20                                                               11/25/2022 22:50:27 PAGE 9   

0044 35F0              ADDC    A,B
0046 FE                MOV     R6,A
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
0047         ?C0020:
0047 22                RET     
             ; FUNCTION ds18B20ReadTemperture (END)

C51 COMPILER V9.01   DS18B20                                                               11/25/2022 22:50:27 PAGE 10  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


wire1ReadByte. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ret. . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0000H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0001H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
_wire1Byte . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  value. . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0000H  1
  b. . . . . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0001H  1
wire1Init. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ret. . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0000H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
wire1ReadBit . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ret. . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0000H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
_wire1WriteByte. . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
DQ . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
ds18B20ReadTemperture. . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ret. . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  tmp1 . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0000H  1
  tmp2 . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0001H  1
wire1WriteBit. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  b. . . . . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
_ds18b20Config . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  mode . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0000H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
wire1Reset . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_delayms . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
_delayus . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    327    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----       9
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
