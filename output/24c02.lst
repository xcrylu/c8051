C51 COMPILER V9.01   24C02                                                                 11/25/2022 22:50:26 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE 24C02
OBJECT MODULE PLACED IN .\output\24c02.obj
COMPILER INVOKED BY: C:\Keil_v5-79\C51\BIN\C51.EXE driver\24c02.c COMPACT BROWSE INCDIR(.\driver) DEBUG OBJECTEXTEND COD
                    -E SYMBOLS PRINT(.\output\24c02.lst) PREPRINT(.\output\24c02.i) OBJECT(.\output\24c02.obj)

line level    source

   1          //24c02.c
   2          
   3          #include "24c02.h"
   4          #include "com.h"
   5          
   6          
   7          
   8          unsigned char C02ReadByte(unsigned char addr)
   9          {
  10   1        unsigned char ret;
  11   1        I2C_Start();
  12   1      
  13   1        I2C_WriteByte(C02WADDR);
  14   1        I2C_CheckACK();
  15   1      
  16   1        I2C_WriteByte(addr);
  17   1        I2C_CheckACK();
  18   1      
  19   1        I2C_Start();
  20   1      
  21   1        I2C_WriteByte(C02RADDR);
  22   1        I2C_CheckACK();
  23   1      
  24   1        ret = I2C_ReadByte();
  25   1        I2C_NCK();
  26   1      
  27   1        I2C_Stop();
  28   1        return 0;
  29   1      }
  30          
  31          void  C02WriteByte(unsigned char addr,
  32                             unsigned char value)
  33          {
  34   1        I2C_Start();
  35   1      
  36   1        I2C_WriteByte(C02WADDR);
  37   1        I2C_CheckACK();
  38   1      
  39   1        I2C_WriteByte(addr);
  40   1        I2C_CheckACK();
  41   1      
  42   1        I2C_WriteByte(value);
  43   1        I2C_CheckACK();
  44   1      
  45   1        I2C_Stop();
  46   1        
  47   1      }
  48          /* *******
  49          *  功能： 读多个数据
  50             输入参数： addr 起始地址
  51                        size  读数据个数
  52             输出参数： buff  读到的数据存区
  53             返回值：  实际读到的数据个数
  54             */
C51 COMPILER V9.01   24C02                                                                 11/25/2022 22:50:26 PAGE 2   

  55          
  56          
  57          unsigned char C02ReadMutiBytes(unsigned char addr,
  58                                    int size,
  59                                                            unsigned char *buf)
  60          {
  61   1        unsigned char i=0;
  62   1      
  63   1        I2C_Start();
  64   1      
  65   1        I2C_WriteByte(C02WADDR);
  66   1        I2C_CheckACK();
  67   1      
  68   1        I2C_WriteByte(addr);
  69   1        I2C_CheckACK();
  70   1      
  71   1        I2C_Start();
  72   1        I2C_WriteByte(C02RADDR);
  73   1        I2C_CheckACK();
  74   1      
  75   1        for(;i<size-1;i++){    //读size-1个字节
  76   2              buf[i] = I2C_ReadByte();
  77   2              I2C_ACK();
  78   2      //      delay(2);
  79   2        }
  80   1        buf[i]=I2C_ReadByte();  //读最后一个字节
  81   1        I2C_NCK();
  82   1      
  83   1        I2C_Stop();
  84   1      
  85   1        return i;
  86   1                
  87   1      }
  88          
  89          /* *******
  90          *  功能： 写多个数据
  91             输入参数： addr 起始地址
  92                        size  读数据个数
  93             输出参数： buff  要写的数据存区
  94             返回值：  实际写的数据个数
  95             */
  96          
  97          unsigned char C02WriteMutiBytes(unsigned char addr,
  98                                    int size,
  99                                                            unsigned char *buf)
 100          {
 101   1              unsigned char i = 0;
 102   1      
 103   1              I2C_Start();
 104   1      
 105   1              I2C_WriteByte(C02WADDR);
 106   1              I2C_CheckACK();
 107   1      
 108   1              I2C_WriteByte(addr);
 109   1              I2C_CheckACK();
 110   1                                       
 111   1              while(size --){  //连续写size个byte
 112   2                      I2C_WriteByte(buf[i++]);
 113   2                      if(I2C_CheckACK() ==0) break; //如果从机会员nck 提前结束写
 114   2              }
 115   1         I2C_Stop();
 116   1         return i;
C51 COMPILER V9.01   24C02                                                                 11/25/2022 22:50:26 PAGE 3   

 117   1      }
 118          
C51 COMPILER V9.01   24C02                                                                 11/25/2022 22:50:26 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _C02ReadByte (BEGIN)
                                           ; SOURCE LINE # 8
0000 7800        R     MOV     R0,#LOW addr
0002 EF                MOV     A,R7
0003 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 9
                                           ; SOURCE LINE # 11
0004 120000      E     LCALL   I2C_Start
                                           ; SOURCE LINE # 13
0007 7FA0              MOV     R7,#0A0H
0009 120000      E     LCALL   _I2C_WriteByte
                                           ; SOURCE LINE # 14
000C 120000      E     LCALL   I2C_CheckACK
                                           ; SOURCE LINE # 16
000F 7800        R     MOV     R0,#LOW addr
0011 E2                MOVX    A,@R0
0012 FF                MOV     R7,A
0013 120000      E     LCALL   _I2C_WriteByte
                                           ; SOURCE LINE # 17
0016 120000      E     LCALL   I2C_CheckACK
                                           ; SOURCE LINE # 19
0019 120000      E     LCALL   I2C_Start
                                           ; SOURCE LINE # 21
001C 7FA1              MOV     R7,#0A1H
001E 120000      E     LCALL   _I2C_WriteByte
                                           ; SOURCE LINE # 22
0021 120000      E     LCALL   I2C_CheckACK
                                           ; SOURCE LINE # 24
0024 120000      E     LCALL   I2C_ReadByte
0027 7800        R     MOV     R0,#LOW ret
0029 EF                MOV     A,R7
002A F2                MOVX    @R0,A
                                           ; SOURCE LINE # 25
002B 120000      E     LCALL   I2C_NCK
                                           ; SOURCE LINE # 27
002E 120000      E     LCALL   I2C_Stop
                                           ; SOURCE LINE # 28
0031 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 29
0033         ?C0001:
0033 22                RET     
             ; FUNCTION _C02ReadByte (END)

             ; FUNCTION _C02WriteByte (BEGIN)
                                           ; SOURCE LINE # 31
0000 7800        R     MOV     R0,#LOW addr
0002 EF                MOV     A,R7
0003 F2                MOVX    @R0,A
0004 08                INC     R0
0005 ED                MOV     A,R5
0006 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 33
                                           ; SOURCE LINE # 34
0007 120000      E     LCALL   I2C_Start
                                           ; SOURCE LINE # 36
000A 7FA0              MOV     R7,#0A0H
000C 120000      E     LCALL   _I2C_WriteByte
                                           ; SOURCE LINE # 37
000F 120000      E     LCALL   I2C_CheckACK
C51 COMPILER V9.01   24C02                                                                 11/25/2022 22:50:26 PAGE 5   

                                           ; SOURCE LINE # 39
0012 7800        R     MOV     R0,#LOW addr
0014 E2                MOVX    A,@R0
0015 FF                MOV     R7,A
0016 120000      E     LCALL   _I2C_WriteByte
                                           ; SOURCE LINE # 40
0019 120000      E     LCALL   I2C_CheckACK
                                           ; SOURCE LINE # 42
001C 7800        R     MOV     R0,#LOW value
001E E2                MOVX    A,@R0
001F FF                MOV     R7,A
0020 120000      E     LCALL   _I2C_WriteByte
                                           ; SOURCE LINE # 43
0023 120000      E     LCALL   I2C_CheckACK
                                           ; SOURCE LINE # 45
0026 020000      E     LJMP    I2C_Stop
             ; FUNCTION _C02WriteByte (END)

             ; FUNCTION _C02ReadMutiBytes (BEGIN)
                                           ; SOURCE LINE # 57
0000 7800        R     MOV     R0,#LOW addr
0002 EF                MOV     A,R7
0003 F2                MOVX    @R0,A
0004 08                INC     R0
0005 EC                MOV     A,R4
0006 F2                MOVX    @R0,A
0007 08                INC     R0
0008 ED                MOV     A,R5
0009 F2                MOVX    @R0,A
000A 08                INC     R0
000B EB                MOV     A,R3
000C F2                MOVX    @R0,A
000D 08                INC     R0
000E EA                MOV     A,R2
000F F2                MOVX    @R0,A
0010 08                INC     R0
0011 E9                MOV     A,R1
0012 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
0013 E4                CLR     A
0014 08                INC     R0
0015 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 63
0016 120000      E     LCALL   I2C_Start
                                           ; SOURCE LINE # 65
0019 7FA0              MOV     R7,#0A0H
001B 120000      E     LCALL   _I2C_WriteByte
                                           ; SOURCE LINE # 66
001E 120000      E     LCALL   I2C_CheckACK
                                           ; SOURCE LINE # 68
0021 7800        R     MOV     R0,#LOW addr
0023 E2                MOVX    A,@R0
0024 FF                MOV     R7,A
0025 120000      E     LCALL   _I2C_WriteByte
                                           ; SOURCE LINE # 69
0028 120000      E     LCALL   I2C_CheckACK
                                           ; SOURCE LINE # 71
002B 120000      E     LCALL   I2C_Start
                                           ; SOURCE LINE # 72
002E 7FA1              MOV     R7,#0A1H
0030 120000      E     LCALL   _I2C_WriteByte
C51 COMPILER V9.01   24C02                                                                 11/25/2022 22:50:26 PAGE 6   

                                           ; SOURCE LINE # 73
0033 120000      E     LCALL   I2C_CheckACK
                                           ; SOURCE LINE # 75
0036         ?C0003:
0036 7800        R     MOV     R0,#LOW size+01H
0038 E2                MOVX    A,@R0
0039 24FF              ADD     A,#0FFH
003B FF                MOV     R7,A
003C 18                DEC     R0
003D E2                MOVX    A,@R0
003E 34FF              ADDC    A,#0FFH
0040 FE                MOV     R6,A
0041 7800        R     MOV     R0,#LOW i
0043 E2                MOVX    A,@R0
0044 C3                CLR     C
0045 9F                SUBB    A,R7
0046 EE                MOV     A,R6
0047 6480              XRL     A,#080H
0049 F8                MOV     R0,A
004A 7480              MOV     A,#080H
004C 98                SUBB    A,R0
004D 5022              JNC     ?C0004
                                           ; SOURCE LINE # 76
004F 120000      E     LCALL   I2C_ReadByte
0052 7800        R     MOV     R0,#LOW buf
0054 E2                MOVX    A,@R0
0055 FB                MOV     R3,A
0056 08                INC     R0
0057 E2                MOVX    A,@R0
0058 FA                MOV     R2,A
0059 08                INC     R0
005A E2                MOVX    A,@R0
005B F9                MOV     R1,A
005C 08                INC     R0
005D E2                MOVX    A,@R0
005E F582              MOV     DPL,A
0060 758300            MOV     DPH,#00H
0063 EF                MOV     A,R7
0064 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 77
0067 120000      E     LCALL   I2C_ACK
                                           ; SOURCE LINE # 79
006A 7800        R     MOV     R0,#LOW i
006C E2                MOVX    A,@R0
006D 04                INC     A
006E F2                MOVX    @R0,A
006F 80C5              SJMP    ?C0003
0071         ?C0004:
                                           ; SOURCE LINE # 80
0071 120000      E     LCALL   I2C_ReadByte
0074 7800        R     MOV     R0,#LOW buf
0076 E2                MOVX    A,@R0
0077 FB                MOV     R3,A
0078 08                INC     R0
0079 E2                MOVX    A,@R0
007A FA                MOV     R2,A
007B 08                INC     R0
007C E2                MOVX    A,@R0
007D F9                MOV     R1,A
007E 08                INC     R0
007F E2                MOVX    A,@R0
0080 F582              MOV     DPL,A
C51 COMPILER V9.01   24C02                                                                 11/25/2022 22:50:26 PAGE 7   

0082 758300            MOV     DPH,#00H
0085 EF                MOV     A,R7
0086 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 81
0089 120000      E     LCALL   I2C_NCK
                                           ; SOURCE LINE # 83
008C 120000      E     LCALL   I2C_Stop
                                           ; SOURCE LINE # 85
008F 7800        R     MOV     R0,#LOW i
0091 E2                MOVX    A,@R0
0092 FF                MOV     R7,A
                                           ; SOURCE LINE # 87
0093         ?C0006:
0093 22                RET     
             ; FUNCTION _C02ReadMutiBytes (END)

             ; FUNCTION _C02WriteMutiBytes (BEGIN)
                                           ; SOURCE LINE # 97
0000 7800        R     MOV     R0,#LOW addr
0002 EF                MOV     A,R7
0003 F2                MOVX    @R0,A
0004 08                INC     R0
0005 EC                MOV     A,R4
0006 F2                MOVX    @R0,A
0007 08                INC     R0
0008 ED                MOV     A,R5
0009 F2                MOVX    @R0,A
000A 08                INC     R0
000B EB                MOV     A,R3
000C F2                MOVX    @R0,A
000D 08                INC     R0
000E EA                MOV     A,R2
000F F2                MOVX    @R0,A
0010 08                INC     R0
0011 E9                MOV     A,R1
0012 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
0013 E4                CLR     A
0014 08                INC     R0
0015 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 103
0016 120000      E     LCALL   I2C_Start
                                           ; SOURCE LINE # 105
0019 7FA0              MOV     R7,#0A0H
001B 120000      E     LCALL   _I2C_WriteByte
                                           ; SOURCE LINE # 106
001E 120000      E     LCALL   I2C_CheckACK
                                           ; SOURCE LINE # 108
0021 7800        R     MOV     R0,#LOW addr
0023 E2                MOVX    A,@R0
0024 FF                MOV     R7,A
0025 120000      E     LCALL   _I2C_WriteByte
                                           ; SOURCE LINE # 109
0028 120000      E     LCALL   I2C_CheckACK
002B         ?C0007:
                                           ; SOURCE LINE # 111
002B 7800        R     MOV     R0,#LOW size
002D 08                INC     R0
002E E2                MOVX    A,@R0
002F FF                MOV     R7,A
0030 24FF              ADD     A,#0FFH
C51 COMPILER V9.01   24C02                                                                 11/25/2022 22:50:26 PAGE 8   

0032 F2                MOVX    @R0,A
0033 18                DEC     R0
0034 E2                MOVX    A,@R0
0035 FE                MOV     R6,A
0036 34FF              ADDC    A,#0FFH
0038 F2                MOVX    @R0,A
0039 EF                MOV     A,R7
003A 4E                ORL     A,R6
003B 6021              JZ      ?C0008
                                           ; SOURCE LINE # 112
003D 7800        R     MOV     R0,#LOW buf
003F E2                MOVX    A,@R0
0040 FB                MOV     R3,A
0041 08                INC     R0
0042 E2                MOVX    A,@R0
0043 FA                MOV     R2,A
0044 08                INC     R0
0045 E2                MOVX    A,@R0
0046 F9                MOV     R1,A
0047 08                INC     R0
0048 E2                MOVX    A,@R0
0049 FF                MOV     R7,A
004A 04                INC     A
004B F2                MOVX    @R0,A
004C 8F82              MOV     DPL,R7
004E 758300            MOV     DPH,#00H
0051 120000      E     LCALL   ?C?CLDOPTR
0054 FF                MOV     R7,A
0055 120000      E     LCALL   _I2C_WriteByte
                                           ; SOURCE LINE # 113
0058 120000      E     LCALL   I2C_CheckACK
005B EF                MOV     A,R7
005C 70CD              JNZ     ?C0007
005E         ?C0008:
                                           ; SOURCE LINE # 115
005E 120000      E     LCALL   I2C_Stop
                                           ; SOURCE LINE # 116
0061 7800        R     MOV     R0,#LOW i
0063 E2                MOVX    A,@R0
0064 FF                MOV     R7,A
                                           ; SOURCE LINE # 117
0065         ?C0010:
0065 22                RET     
             ; FUNCTION _C02WriteMutiBytes (END)

C51 COMPILER V9.01   24C02                                                                 11/25/2022 22:50:26 PAGE 9   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
I2C_Start. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
I2C_ReadByte . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
_C02ReadByte . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  addr . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0000H  1
  ret. . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0001H  1
_I2C_WriteByte . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
I2C_Stop . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_C02WriteByte. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  addr . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0000H  1
  value. . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0001H  1
I2C_CheckACK . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_C02ReadMutiBytes. . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  addr . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0000H  1
  size . . . . . . . . . . . . . . . .  AUTO     PDATA  INT      0001H  2
  buf. . . . . . . . . . . . . . . . .  AUTO     PDATA  PTR      0003H  3
  i. . . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0006H  1
_C02WriteMutiBytes . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  addr . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0000H  1
  size . . . . . . . . . . . . . . . .  AUTO     PDATA  INT      0001H  2
  buf. . . . . . . . . . . . . . . . .  AUTO     PDATA  PTR      0003H  3
  i. . . . . . . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0006H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
I2C_ACK. . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
I2C_NCK. . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    343    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      18
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
